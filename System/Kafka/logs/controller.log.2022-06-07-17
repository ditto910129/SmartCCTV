[2022-06-07 17:03:52,065] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-06-07 17:03:52,065] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-06-07 17:03:52,065] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-06-07 17:03:52,065] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-06-07 17:08:52,066] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-06-07 17:08:52,066] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-06-07 17:08:52,066] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-06-07 17:08:52,066] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-06-07 17:13:52,066] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-06-07 17:13:52,066] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-06-07 17:13:52,066] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-06-07 17:13:52,066] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-06-07 17:18:52,067] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-06-07 17:18:52,067] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-06-07 17:18:52,067] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-06-07 17:18:52,067] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-06-07 17:23:52,067] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-06-07 17:23:52,067] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-06-07 17:23:52,067] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-06-07 17:23:52,067] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-06-07 17:28:52,068] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-06-07 17:28:52,068] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-06-07 17:28:52,068] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-06-07 17:28:52,068] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-06-07 17:33:52,068] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-06-07 17:33:52,068] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-06-07 17:33:52,069] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-06-07 17:33:52,069] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-06-07 17:38:52,069] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-06-07 17:38:52,069] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-06-07 17:38:52,069] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-06-07 17:38:52,069] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-06-07 17:39:27,704] DEBUG [Controller id=0] Delete topics listener fired for topics davao to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:39:27,704] INFO [Controller id=0] Starting topic deletion for topics davao (kafka.controller.KafkaController)
[2022-06-07 17:39:27,706] INFO [Topic Deletion Manager 0] Handling deletion for topics davao (kafka.controller.TopicDeletionManager)
[2022-06-07 17:39:27,707] INFO [Topic Deletion Manager 0] Deletion of topic davao (re)started (kafka.controller.TopicDeletionManager)
[2022-06-07 17:39:27,711] INFO [RequestSendThread controllerId=0] Controller 0 connected to 14.7.128.55:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-06-07 17:39:27,743] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(davao-0 -> NONE) (kafka.controller.KafkaController)
[2022-06-07 17:39:27,744] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=davao,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-06-07 17:39:27,745] INFO [Topic Deletion Manager 0] Handling deletion for topics davao (kafka.controller.TopicDeletionManager)
[2022-06-07 17:39:27,759] INFO [Topic Deletion Manager 0] Deletion of topic davao successfully completed (kafka.controller.TopicDeletionManager)
[2022-06-07 17:39:27,760] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-06-07 17:39:27,760] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:39:36,095] DEBUG [Controller id=0] Delete topics listener fired for topics falldown to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:39:36,095] INFO [Controller id=0] Starting topic deletion for topics falldown (kafka.controller.KafkaController)
[2022-06-07 17:39:36,095] INFO [Topic Deletion Manager 0] Handling deletion for topics falldown (kafka.controller.TopicDeletionManager)
[2022-06-07 17:39:36,095] INFO [Topic Deletion Manager 0] Deletion of topic falldown (re)started (kafka.controller.TopicDeletionManager)
[2022-06-07 17:39:36,103] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(falldown-0 -> NONE) (kafka.controller.KafkaController)
[2022-06-07 17:39:36,103] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=falldown,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-06-07 17:39:36,104] INFO [Topic Deletion Manager 0] Handling deletion for topics falldown (kafka.controller.TopicDeletionManager)
[2022-06-07 17:39:36,110] INFO [Topic Deletion Manager 0] Deletion of topic falldown successfully completed (kafka.controller.TopicDeletionManager)
[2022-06-07 17:39:36,111] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-06-07 17:39:36,111] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:39:42,898] DEBUG [Controller id=0] Delete topics listener fired for topics fire to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:39:42,898] INFO [Controller id=0] Starting topic deletion for topics fire (kafka.controller.KafkaController)
[2022-06-07 17:39:42,898] INFO [Topic Deletion Manager 0] Handling deletion for topics fire (kafka.controller.TopicDeletionManager)
[2022-06-07 17:39:42,898] INFO [Topic Deletion Manager 0] Deletion of topic fire (re)started (kafka.controller.TopicDeletionManager)
[2022-06-07 17:39:42,906] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(fire-0 -> NONE) (kafka.controller.KafkaController)
[2022-06-07 17:39:42,906] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=fire,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-06-07 17:39:42,907] INFO [Topic Deletion Manager 0] Handling deletion for topics fire (kafka.controller.TopicDeletionManager)
[2022-06-07 17:39:42,914] INFO [Topic Deletion Manager 0] Deletion of topic fire successfully completed (kafka.controller.TopicDeletionManager)
[2022-06-07 17:39:42,914] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-06-07 17:39:42,915] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:39:47,541] DEBUG [Controller id=0] Delete topics listener fired for topics sea to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:39:47,541] INFO [Controller id=0] Starting topic deletion for topics sea (kafka.controller.KafkaController)
[2022-06-07 17:39:47,541] INFO [Topic Deletion Manager 0] Handling deletion for topics sea (kafka.controller.TopicDeletionManager)
[2022-06-07 17:39:47,542] INFO [Topic Deletion Manager 0] Deletion of topic sea (re)started (kafka.controller.TopicDeletionManager)
[2022-06-07 17:39:47,556] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(sea-0 -> NONE) (kafka.controller.KafkaController)
[2022-06-07 17:39:47,556] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=sea,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-06-07 17:39:47,557] INFO [Topic Deletion Manager 0] Handling deletion for topics sea (kafka.controller.TopicDeletionManager)
[2022-06-07 17:39:47,566] INFO [Topic Deletion Manager 0] Deletion of topic sea successfully completed (kafka.controller.TopicDeletionManager)
[2022-06-07 17:39:47,566] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-06-07 17:39:47,567] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:39:47,661] INFO [Controller id=0] New topics: [Set(sea)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(sea,Some(g4GtNgX2Sa-3p0GNyI3lyQ),Map(sea-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-06-07 17:39:47,661] INFO [Controller id=0] New partition creation callback for sea-0 (kafka.controller.KafkaController)
[2022-06-07 17:39:53,355] DEBUG [Controller id=0] Delete topics listener fired for topics lasvegas to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:39:53,356] INFO [Controller id=0] Starting topic deletion for topics lasvegas (kafka.controller.KafkaController)
[2022-06-07 17:39:53,356] INFO [Topic Deletion Manager 0] Handling deletion for topics lasvegas (kafka.controller.TopicDeletionManager)
[2022-06-07 17:39:53,356] INFO [Topic Deletion Manager 0] Deletion of topic lasvegas (re)started (kafka.controller.TopicDeletionManager)
[2022-06-07 17:39:53,365] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(lasvegas-0 -> NONE) (kafka.controller.KafkaController)
[2022-06-07 17:39:53,365] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=lasvegas,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-06-07 17:39:53,365] INFO [Topic Deletion Manager 0] Handling deletion for topics lasvegas (kafka.controller.TopicDeletionManager)
[2022-06-07 17:39:53,372] INFO [Topic Deletion Manager 0] Deletion of topic lasvegas successfully completed (kafka.controller.TopicDeletionManager)
[2022-06-07 17:39:53,373] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-06-07 17:39:53,373] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:39:59,420] DEBUG [Controller id=0] Delete topics listener fired for topics webcam to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:39:59,420] INFO [Controller id=0] Starting topic deletion for topics webcam (kafka.controller.KafkaController)
[2022-06-07 17:39:59,420] INFO [Topic Deletion Manager 0] Handling deletion for topics webcam (kafka.controller.TopicDeletionManager)
[2022-06-07 17:39:59,420] INFO [Topic Deletion Manager 0] Deletion of topic webcam (re)started (kafka.controller.TopicDeletionManager)
[2022-06-07 17:39:59,429] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(webcam-0 -> NONE) (kafka.controller.KafkaController)
[2022-06-07 17:39:59,429] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=webcam,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-06-07 17:39:59,429] INFO [Topic Deletion Manager 0] Handling deletion for topics webcam (kafka.controller.TopicDeletionManager)
[2022-06-07 17:39:59,438] INFO [Topic Deletion Manager 0] Deletion of topic webcam successfully completed (kafka.controller.TopicDeletionManager)
[2022-06-07 17:39:59,438] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-06-07 17:39:59,439] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:39:59,535] INFO [Controller id=0] New topics: [Set(webcam)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(webcam,Some(vuFpl9eNSuuIdCmyIi6tyQ),Map(webcam-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-06-07 17:39:59,535] INFO [Controller id=0] New partition creation callback for webcam-0 (kafka.controller.KafkaController)
[2022-06-07 17:40:03,322] DEBUG [Controller id=0] Delete topics listener fired for topics webcam2 to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:40:03,322] INFO [Controller id=0] Starting topic deletion for topics webcam2 (kafka.controller.KafkaController)
[2022-06-07 17:40:03,322] INFO [Topic Deletion Manager 0] Handling deletion for topics webcam2 (kafka.controller.TopicDeletionManager)
[2022-06-07 17:40:03,322] INFO [Topic Deletion Manager 0] Deletion of topic webcam2 (re)started (kafka.controller.TopicDeletionManager)
[2022-06-07 17:40:03,331] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(webcam2-0 -> NONE) (kafka.controller.KafkaController)
[2022-06-07 17:40:03,331] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=webcam2,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-06-07 17:40:03,332] INFO [Topic Deletion Manager 0] Handling deletion for topics webcam2 (kafka.controller.TopicDeletionManager)
[2022-06-07 17:40:03,338] INFO [Topic Deletion Manager 0] Deletion of topic webcam2 successfully completed (kafka.controller.TopicDeletionManager)
[2022-06-07 17:40:03,339] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-06-07 17:40:03,339] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:40:08,663] DEBUG [Controller id=0] Delete topics listener fired for topics temp1 to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:40:08,663] INFO [Controller id=0] Starting topic deletion for topics temp1 (kafka.controller.KafkaController)
[2022-06-07 17:40:08,663] INFO [Topic Deletion Manager 0] Handling deletion for topics temp1 (kafka.controller.TopicDeletionManager)
[2022-06-07 17:40:08,663] INFO [Topic Deletion Manager 0] Deletion of topic temp1 (re)started (kafka.controller.TopicDeletionManager)
[2022-06-07 17:40:08,670] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(temp1-0 -> NONE) (kafka.controller.KafkaController)
[2022-06-07 17:40:08,670] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=temp1,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-06-07 17:40:08,671] INFO [Topic Deletion Manager 0] Handling deletion for topics temp1 (kafka.controller.TopicDeletionManager)
[2022-06-07 17:40:08,677] INFO [Topic Deletion Manager 0] Deletion of topic temp1 successfully completed (kafka.controller.TopicDeletionManager)
[2022-06-07 17:40:08,677] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-06-07 17:40:08,678] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:40:13,953] DEBUG [Controller id=0] Delete topics listener fired for topics yangjae to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:40:13,953] INFO [Controller id=0] Starting topic deletion for topics yangjae (kafka.controller.KafkaController)
[2022-06-07 17:40:13,953] INFO [Topic Deletion Manager 0] Handling deletion for topics yangjae (kafka.controller.TopicDeletionManager)
[2022-06-07 17:40:13,954] INFO [Topic Deletion Manager 0] Deletion of topic yangjae (re)started (kafka.controller.TopicDeletionManager)
[2022-06-07 17:40:13,961] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(yangjae-0 -> NONE) (kafka.controller.KafkaController)
[2022-06-07 17:40:13,961] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=yangjae,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-06-07 17:40:13,962] INFO [Topic Deletion Manager 0] Handling deletion for topics yangjae (kafka.controller.TopicDeletionManager)
[2022-06-07 17:40:13,967] INFO [Topic Deletion Manager 0] Deletion of topic yangjae successfully completed (kafka.controller.TopicDeletionManager)
[2022-06-07 17:40:13,968] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-06-07 17:40:13,968] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:40:27,527] DEBUG [Controller id=0] Delete topics listener fired for topics sea to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:40:27,527] INFO [Controller id=0] Starting topic deletion for topics sea (kafka.controller.KafkaController)
[2022-06-07 17:40:27,527] INFO [Topic Deletion Manager 0] Handling deletion for topics sea (kafka.controller.TopicDeletionManager)
[2022-06-07 17:40:27,527] INFO [Topic Deletion Manager 0] Deletion of topic sea (re)started (kafka.controller.TopicDeletionManager)
[2022-06-07 17:40:27,536] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(sea-0 -> NONE) (kafka.controller.KafkaController)
[2022-06-07 17:40:27,536] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=sea,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-06-07 17:40:27,536] INFO [Topic Deletion Manager 0] Handling deletion for topics sea (kafka.controller.TopicDeletionManager)
[2022-06-07 17:40:27,543] INFO [Topic Deletion Manager 0] Deletion of topic sea successfully completed (kafka.controller.TopicDeletionManager)
[2022-06-07 17:40:27,544] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-06-07 17:40:27,545] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:40:27,642] INFO [Controller id=0] New topics: [Set(sea)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(sea,Some(inGuvawLRfuI7O7KOzbHEQ),Map(sea-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-06-07 17:40:27,642] INFO [Controller id=0] New partition creation callback for sea-0 (kafka.controller.KafkaController)
[2022-06-07 17:40:34,254] DEBUG [Controller id=0] Delete topics listener fired for topics webcam to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:40:34,254] INFO [Controller id=0] Starting topic deletion for topics webcam (kafka.controller.KafkaController)
[2022-06-07 17:40:34,254] INFO [Topic Deletion Manager 0] Handling deletion for topics webcam (kafka.controller.TopicDeletionManager)
[2022-06-07 17:40:34,254] INFO [Topic Deletion Manager 0] Deletion of topic webcam (re)started (kafka.controller.TopicDeletionManager)
[2022-06-07 17:40:34,262] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(webcam-0 -> NONE) (kafka.controller.KafkaController)
[2022-06-07 17:40:34,262] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=webcam,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-06-07 17:40:34,262] INFO [Topic Deletion Manager 0] Handling deletion for topics webcam (kafka.controller.TopicDeletionManager)
[2022-06-07 17:40:34,270] INFO [Topic Deletion Manager 0] Deletion of topic webcam successfully completed (kafka.controller.TopicDeletionManager)
[2022-06-07 17:40:34,270] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-06-07 17:40:34,271] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:40:34,365] INFO [Controller id=0] New topics: [Set(webcam)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(webcam,Some(U-z5QYJlSOWap1ApBUd1gw),Map(webcam-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-06-07 17:40:34,365] INFO [Controller id=0] New partition creation callback for webcam-0 (kafka.controller.KafkaController)
[2022-06-07 17:41:58,851] DEBUG [Controller id=0] Delete topics listener fired for topics webcam to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:41:58,851] INFO [Controller id=0] Starting topic deletion for topics webcam (kafka.controller.KafkaController)
[2022-06-07 17:41:58,851] INFO [Topic Deletion Manager 0] Handling deletion for topics webcam (kafka.controller.TopicDeletionManager)
[2022-06-07 17:41:58,851] INFO [Topic Deletion Manager 0] Deletion of topic webcam (re)started (kafka.controller.TopicDeletionManager)
[2022-06-07 17:41:58,860] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(webcam-0 -> NONE) (kafka.controller.KafkaController)
[2022-06-07 17:41:58,860] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=webcam,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-06-07 17:41:58,860] INFO [Topic Deletion Manager 0] Handling deletion for topics webcam (kafka.controller.TopicDeletionManager)
[2022-06-07 17:41:58,867] INFO [Topic Deletion Manager 0] Deletion of topic webcam successfully completed (kafka.controller.TopicDeletionManager)
[2022-06-07 17:41:58,867] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-06-07 17:41:58,868] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:41:58,964] INFO [Controller id=0] New topics: [Set(webcam)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(webcam,Some(9QiRSn9gQsORvvI0c6XG9A),Map(webcam-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-06-07 17:41:58,964] INFO [Controller id=0] New partition creation callback for webcam-0 (kafka.controller.KafkaController)
[2022-06-07 17:42:17,170] DEBUG [Controller id=0] Delete topics listener fired for topics sea to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:42:17,170] INFO [Controller id=0] Starting topic deletion for topics sea (kafka.controller.KafkaController)
[2022-06-07 17:42:17,170] INFO [Topic Deletion Manager 0] Handling deletion for topics sea (kafka.controller.TopicDeletionManager)
[2022-06-07 17:42:17,170] INFO [Topic Deletion Manager 0] Deletion of topic sea (re)started (kafka.controller.TopicDeletionManager)
[2022-06-07 17:42:17,180] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(sea-0 -> NONE) (kafka.controller.KafkaController)
[2022-06-07 17:42:17,180] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=sea,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-06-07 17:42:17,180] INFO [Topic Deletion Manager 0] Handling deletion for topics sea (kafka.controller.TopicDeletionManager)
[2022-06-07 17:42:17,186] INFO [Topic Deletion Manager 0] Deletion of topic sea successfully completed (kafka.controller.TopicDeletionManager)
[2022-06-07 17:42:17,186] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-06-07 17:42:17,187] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:42:17,284] INFO [Controller id=0] New topics: [Set(sea)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(sea,Some(kjWrz87OQZCs-rmWS12EwQ),Map(sea-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-06-07 17:42:17,284] INFO [Controller id=0] New partition creation callback for sea-0 (kafka.controller.KafkaController)
[2022-06-07 17:42:56,945] DEBUG [Controller id=0] Delete topics listener fired for topics sea to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:42:56,945] INFO [Controller id=0] Starting topic deletion for topics sea (kafka.controller.KafkaController)
[2022-06-07 17:42:56,946] INFO [Topic Deletion Manager 0] Handling deletion for topics sea (kafka.controller.TopicDeletionManager)
[2022-06-07 17:42:56,946] INFO [Topic Deletion Manager 0] Deletion of topic sea (re)started (kafka.controller.TopicDeletionManager)
[2022-06-07 17:42:56,954] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(sea-0 -> NONE) (kafka.controller.KafkaController)
[2022-06-07 17:42:56,954] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=sea,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-06-07 17:42:56,955] INFO [Topic Deletion Manager 0] Handling deletion for topics sea (kafka.controller.TopicDeletionManager)
[2022-06-07 17:42:56,961] INFO [Topic Deletion Manager 0] Deletion of topic sea successfully completed (kafka.controller.TopicDeletionManager)
[2022-06-07 17:42:56,961] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-06-07 17:42:56,962] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:42:57,058] INFO [Controller id=0] New topics: [Set(sea)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(sea,Some(Yr9iYhI7TfmH_PsWglXCJQ),Map(sea-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-06-07 17:42:57,058] INFO [Controller id=0] New partition creation callback for sea-0 (kafka.controller.KafkaController)
[2022-06-07 17:43:20,761] DEBUG [Controller id=0] Delete topics listener fired for topics sea to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:43:20,761] INFO [Controller id=0] Starting topic deletion for topics sea (kafka.controller.KafkaController)
[2022-06-07 17:43:20,761] INFO [Topic Deletion Manager 0] Handling deletion for topics sea (kafka.controller.TopicDeletionManager)
[2022-06-07 17:43:20,761] INFO [Topic Deletion Manager 0] Deletion of topic sea (re)started (kafka.controller.TopicDeletionManager)
[2022-06-07 17:43:20,769] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(sea-0 -> NONE) (kafka.controller.KafkaController)
[2022-06-07 17:43:20,769] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=sea,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-06-07 17:43:20,769] INFO [Topic Deletion Manager 0] Handling deletion for topics sea (kafka.controller.TopicDeletionManager)
[2022-06-07 17:43:20,775] INFO [Topic Deletion Manager 0] Deletion of topic sea successfully completed (kafka.controller.TopicDeletionManager)
[2022-06-07 17:43:20,776] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-06-07 17:43:20,776] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:43:20,873] INFO [Controller id=0] New topics: [Set(sea)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(sea,Some(lhwadLZpRFuLNiKOD8otdA),Map(sea-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-06-07 17:43:20,873] INFO [Controller id=0] New partition creation callback for sea-0 (kafka.controller.KafkaController)
[2022-06-07 17:43:52,069] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-06-07 17:43:52,069] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-06-07 17:43:52,070] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-06-07 17:43:52,070] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-06-07 17:47:12,246] INFO [Controller id=0] New topics: [Set(yangjae)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(yangjae,Some(wVffA3GMQ6W-8t8r1nDhCg),Map(yangjae-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-06-07 17:47:12,246] INFO [Controller id=0] New partition creation callback for yangjae-0 (kafka.controller.KafkaController)
[2022-06-07 17:47:18,009] INFO [Controller id=0] New topics: [Set(davao)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(davao,Some(q6XegC9KTgiW0KR2tDfsrg),Map(davao-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-06-07 17:47:18,009] INFO [Controller id=0] New partition creation callback for davao-0 (kafka.controller.KafkaController)
[2022-06-07 17:47:52,833] INFO [Controller id=0] New topics: [Set(webcam2)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(webcam2,Some(ueH9UaUwRDO75ZwffdPXsg),Map(webcam2-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-06-07 17:47:52,833] INFO [Controller id=0] New partition creation callback for webcam2-0 (kafka.controller.KafkaController)
[2022-06-07 17:48:52,070] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-06-07 17:48:52,070] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-06-07 17:48:52,070] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-06-07 17:48:52,070] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-06-07 17:51:12,303] DEBUG [Controller id=0] Delete topics listener fired for topics davao to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:51:12,303] INFO [Controller id=0] Starting topic deletion for topics davao (kafka.controller.KafkaController)
[2022-06-07 17:51:12,303] INFO [Topic Deletion Manager 0] Handling deletion for topics davao (kafka.controller.TopicDeletionManager)
[2022-06-07 17:51:12,303] INFO [Topic Deletion Manager 0] Deletion of topic davao (re)started (kafka.controller.TopicDeletionManager)
[2022-06-07 17:51:12,312] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(davao-0 -> NONE) (kafka.controller.KafkaController)
[2022-06-07 17:51:12,312] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=davao,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-06-07 17:51:12,312] INFO [Topic Deletion Manager 0] Handling deletion for topics davao (kafka.controller.TopicDeletionManager)
[2022-06-07 17:51:12,327] INFO [Topic Deletion Manager 0] Deletion of topic davao successfully completed (kafka.controller.TopicDeletionManager)
[2022-06-07 17:51:12,327] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-06-07 17:51:12,328] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:51:12,415] INFO [Controller id=0] New topics: [Set(davao)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(davao,Some(9pid-dxjQ4Kb9uGh0q2-0w),Map(davao-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-06-07 17:51:12,415] INFO [Controller id=0] New partition creation callback for davao-0 (kafka.controller.KafkaController)
[2022-06-07 17:51:26,060] DEBUG [Controller id=0] Delete topics listener fired for topics sea to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:51:26,060] INFO [Controller id=0] Starting topic deletion for topics sea (kafka.controller.KafkaController)
[2022-06-07 17:51:26,060] INFO [Topic Deletion Manager 0] Handling deletion for topics sea (kafka.controller.TopicDeletionManager)
[2022-06-07 17:51:26,060] INFO [Topic Deletion Manager 0] Deletion of topic sea (re)started (kafka.controller.TopicDeletionManager)
[2022-06-07 17:51:26,068] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(sea-0 -> NONE) (kafka.controller.KafkaController)
[2022-06-07 17:51:26,068] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=sea,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-06-07 17:51:26,068] INFO [Topic Deletion Manager 0] Handling deletion for topics sea (kafka.controller.TopicDeletionManager)
[2022-06-07 17:51:26,074] INFO [Topic Deletion Manager 0] Deletion of topic sea successfully completed (kafka.controller.TopicDeletionManager)
[2022-06-07 17:51:26,074] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-06-07 17:51:26,075] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:51:26,173] INFO [Controller id=0] New topics: [Set(sea)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(sea,Some(PXyIROYwTw6tiRMgNkIjpw),Map(sea-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-06-07 17:51:26,173] INFO [Controller id=0] New partition creation callback for sea-0 (kafka.controller.KafkaController)
[2022-06-07 17:51:46,354] DEBUG [Controller id=0] Delete topics listener fired for topics webcam to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:51:46,354] INFO [Controller id=0] Starting topic deletion for topics webcam (kafka.controller.KafkaController)
[2022-06-07 17:51:46,354] INFO [Topic Deletion Manager 0] Handling deletion for topics webcam (kafka.controller.TopicDeletionManager)
[2022-06-07 17:51:46,354] INFO [Topic Deletion Manager 0] Deletion of topic webcam (re)started (kafka.controller.TopicDeletionManager)
[2022-06-07 17:51:46,362] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(webcam-0 -> NONE) (kafka.controller.KafkaController)
[2022-06-07 17:51:46,362] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=webcam,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-06-07 17:51:46,362] INFO [Topic Deletion Manager 0] Handling deletion for topics webcam (kafka.controller.TopicDeletionManager)
[2022-06-07 17:51:46,374] INFO [Topic Deletion Manager 0] Deletion of topic webcam successfully completed (kafka.controller.TopicDeletionManager)
[2022-06-07 17:51:46,375] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-06-07 17:51:46,375] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:51:46,466] INFO [Controller id=0] New topics: [Set(webcam)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(webcam,Some(NDO6GsvhRxCR4dEYzADeWQ),Map(webcam-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-06-07 17:51:46,466] INFO [Controller id=0] New partition creation callback for webcam-0 (kafka.controller.KafkaController)
[2022-06-07 17:52:00,213] DEBUG [Controller id=0] Delete topics listener fired for topics webcam to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:52:00,213] INFO [Controller id=0] Starting topic deletion for topics webcam (kafka.controller.KafkaController)
[2022-06-07 17:52:00,213] INFO [Topic Deletion Manager 0] Handling deletion for topics webcam (kafka.controller.TopicDeletionManager)
[2022-06-07 17:52:00,213] INFO [Topic Deletion Manager 0] Deletion of topic webcam (re)started (kafka.controller.TopicDeletionManager)
[2022-06-07 17:52:00,221] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(webcam-0 -> NONE) (kafka.controller.KafkaController)
[2022-06-07 17:52:00,221] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=webcam,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-06-07 17:52:00,221] INFO [Topic Deletion Manager 0] Handling deletion for topics webcam (kafka.controller.TopicDeletionManager)
[2022-06-07 17:52:00,229] INFO [Topic Deletion Manager 0] Deletion of topic webcam successfully completed (kafka.controller.TopicDeletionManager)
[2022-06-07 17:52:00,229] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-06-07 17:52:00,230] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:52:00,324] INFO [Controller id=0] New topics: [Set(webcam)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(webcam,Some(3z80h3WVTWuODSPmyEUg6g),Map(webcam-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-06-07 17:52:00,324] INFO [Controller id=0] New partition creation callback for webcam-0 (kafka.controller.KafkaController)
[2022-06-07 17:52:24,447] DEBUG [Controller id=0] Delete topics listener fired for topics webcam2 to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:52:24,447] INFO [Controller id=0] Starting topic deletion for topics webcam2 (kafka.controller.KafkaController)
[2022-06-07 17:52:24,447] INFO [Topic Deletion Manager 0] Handling deletion for topics webcam2 (kafka.controller.TopicDeletionManager)
[2022-06-07 17:52:24,447] INFO [Topic Deletion Manager 0] Deletion of topic webcam2 (re)started (kafka.controller.TopicDeletionManager)
[2022-06-07 17:52:24,456] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(webcam2-0 -> NONE) (kafka.controller.KafkaController)
[2022-06-07 17:52:24,456] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=webcam2,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-06-07 17:52:24,456] INFO [Topic Deletion Manager 0] Handling deletion for topics webcam2 (kafka.controller.TopicDeletionManager)
[2022-06-07 17:52:24,462] INFO [Topic Deletion Manager 0] Deletion of topic webcam2 successfully completed (kafka.controller.TopicDeletionManager)
[2022-06-07 17:52:24,463] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-06-07 17:52:24,463] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:52:24,559] INFO [Controller id=0] New topics: [Set(webcam2)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(webcam2,Some(4PcKOpzmQiKVE31XdQ056g),Map(webcam2-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-06-07 17:52:24,559] INFO [Controller id=0] New partition creation callback for webcam2-0 (kafka.controller.KafkaController)
[2022-06-07 17:52:31,218] DEBUG [Controller id=0] Delete topics listener fired for topics yangjae to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:52:31,218] INFO [Controller id=0] Starting topic deletion for topics yangjae (kafka.controller.KafkaController)
[2022-06-07 17:52:31,218] INFO [Topic Deletion Manager 0] Handling deletion for topics yangjae (kafka.controller.TopicDeletionManager)
[2022-06-07 17:52:31,218] INFO [Topic Deletion Manager 0] Deletion of topic yangjae (re)started (kafka.controller.TopicDeletionManager)
[2022-06-07 17:52:31,226] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(yangjae-0 -> NONE) (kafka.controller.KafkaController)
[2022-06-07 17:52:31,226] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=yangjae,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-06-07 17:52:31,226] INFO [Topic Deletion Manager 0] Handling deletion for topics yangjae (kafka.controller.TopicDeletionManager)
[2022-06-07 17:52:31,232] INFO [Topic Deletion Manager 0] Deletion of topic yangjae successfully completed (kafka.controller.TopicDeletionManager)
[2022-06-07 17:52:31,232] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-06-07 17:52:31,233] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:52:31,333] INFO [Controller id=0] New topics: [Set(yangjae)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(yangjae,Some(v6xLPjR6QiGfGT1n7G870w),Map(yangjae-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-06-07 17:52:31,333] INFO [Controller id=0] New partition creation callback for yangjae-0 (kafka.controller.KafkaController)
[2022-06-07 17:52:36,747] DEBUG [Controller id=0] Delete topics listener fired for topics davao to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:52:36,747] INFO [Controller id=0] Starting topic deletion for topics davao (kafka.controller.KafkaController)
[2022-06-07 17:52:36,747] INFO [Topic Deletion Manager 0] Handling deletion for topics davao (kafka.controller.TopicDeletionManager)
[2022-06-07 17:52:36,747] INFO [Topic Deletion Manager 0] Deletion of topic davao (re)started (kafka.controller.TopicDeletionManager)
[2022-06-07 17:52:36,754] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(davao-0 -> NONE) (kafka.controller.KafkaController)
[2022-06-07 17:52:36,754] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=davao,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-06-07 17:52:36,755] INFO [Topic Deletion Manager 0] Handling deletion for topics davao (kafka.controller.TopicDeletionManager)
[2022-06-07 17:52:36,760] INFO [Topic Deletion Manager 0] Deletion of topic davao successfully completed (kafka.controller.TopicDeletionManager)
[2022-06-07 17:52:36,760] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-06-07 17:52:36,761] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-06-07 17:52:36,857] INFO [Controller id=0] New topics: [Set(davao)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(davao,Some(a8XGe3KQQF6SF_fVMRzeQg),Map(davao-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-06-07 17:52:36,857] INFO [Controller id=0] New partition creation callback for davao-0 (kafka.controller.KafkaController)
[2022-06-07 17:53:52,070] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-06-07 17:53:52,070] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-06-07 17:53:52,071] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-06-07 17:53:52,071] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-06-07 17:58:52,071] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-06-07 17:58:52,071] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-06-07 17:58:52,071] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-06-07 17:58:52,071] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
